给定一个整数，编写一个函数来判断它是否是 2 的幂次方。

示例 1:

输入: 1
输出: true
解释: 20 = 1
示例 2:

输入: 16
输出: true
解释: 24 = 16
示例 3:

输入: 218
输出: false

这种玩数字的题目一般都要考虑位操作，思路一：2的幂的最高位都是1，比如1,10,100，则只需要将n以此往右移动一位再与1做与运算，若为1则cnt+1，最后如果
cnt为1则满足条件。思路2：考虑到2的幂数减去一之后除去最高位之外低位都是0，所以n和n-1运算结果必然为0
1、class Solution {
public:
    bool isPowerOfTwo(int n) {
        int cnt = 0;
        while (n > 0) {
            cnt += (n & 1);
            n >>= 1;
        }
        return cnt == 1;
    } 
};
2、
class Solution {
public:
    bool isPowerOfTwo(int n) {
        return (n > 0) && (!(n & (n - 1)));
    } 
};
