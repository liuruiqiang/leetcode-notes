给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。

示例:

输入: [-2,1,-3,4,-1,2,1,-5,4],
输出: 6
解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/maximum-subarray
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
常规解法：
int maxSubArray(vector<int>& nums) {
        int len=nums.size();
        int max=INT_MIN,sum=0;
        for(int i=0;i<len;i++){
            sum+=nums[i];
            if(sum<0){
                sum=0;
            }
            if(sum>max){
                max=sum;
            }
        }
        return max;
    }
分治解法：
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int len=nums.size();
       
        return helper(nums,0,len-1);
    }
    int helper(vector<int>& nums,int left,int right){
        if(left>=right)return nums[left];
        int mid=(left+right)/2;
        int lmax=helper(nums,left,mid-1);
        int rmax=helper(nums,mid+1,right);
        int mmax=nums[mid],sum=nums[mid];
        for(int i=mid-1;i>=left;i--){
            sum+=nums[i];
            mmax=max(sum,mmax);
        }
        sum=mmax;
        for(int i=mid+1;i<=right;i++){
            sum+=nums[i];
            mmax=max(sum,mmax);
        }
        return max(mmax,max(lmax,rmax));
    }
};
